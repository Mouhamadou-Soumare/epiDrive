name: CI/CD Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  # Charger les variables d'environnement depuis les secrets GitHub
  DATABASE_URL: ${{ secrets.DATABASE_URL }}
  SHADOW_DATABASE_URL: ${{ secrets.SHADOW_DATABASE_URL }}
  MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
  MYSQL_USER: ${{ secrets.MYSQL_USER }}
  MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
  NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
  FOODVISOR_API_KEY: ${{ secrets.FOODVISOR_API_KEY }}
  STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
  NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY }}
  GOOGLE_VISION_API_KEY: ${{ secrets.GOOGLE_VISION_API_KEY }}

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      db:
        image: mysql:9.1
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE: epidrive
          MYSQL_USER: ${{ secrets.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
        ports:
          - 3306:3306

    steps:
      # Étape 1 : Vérifier le code source
      - name: Checkout code
        uses: actions/checkout@v3

      # Étape 2 : Configurer Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # Étape 3 : Installer les dépendances
      - name: Install dependencies
        run: npm install
        working-directory: ./src

      # Étape 4 : Lancer les tests
      - name: Run tests
        run: npm run test
        working-directory: ./src

      # Étape 5 : Build l'application
      - name: Build the application
        run: npm run build
        working-directory: ./src

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
      # Étape 1 : Déployer via Docker
      - name: Deploy using Docker Compose
        run: |
          docker-compose down
          docker-compose up --build -d

name: CI/CD Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  DATABASE_URL: ${{ secrets.DATABASE_URL }}
  SHADOW_DATABASE_URL: ${{ secrets.SHADOW_DATABASE_URL }}
  MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
  MYSQL_USER: ${{ secrets.MYSQL_USER }}
  MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
  JWT_SECRET: ${{ secrets.JWT_SECRET }}
  TON_WALLET_MNEMONIC: ${{ secrets.TON_WALLET_MNEMONIC }}

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root_password
          MYSQL_DATABASE: epidrive
          MYSQL_USER: user
          MYSQL_PASSWORD: password
        ports:
          - 3306:3306

    steps:
      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Cache Node Modules
        uses: actions/cache@v3
        with:
          path: ./src/node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node_modules

      - name: Install Dependencies
        run: npm install
        working-directory: ./src
      
      - name: Lint and Fix
        run: npm run lint --fix || true
        working-directory: ./src

      - name: Docker Scan
        run: docker scan --accept-license zenith_web || true

      - name: Stop Docker Compose
        if: always()
        run: docker-compose down || true
        working-directory: ./src
